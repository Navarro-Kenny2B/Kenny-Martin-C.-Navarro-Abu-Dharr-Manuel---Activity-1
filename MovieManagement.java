/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package movie_management;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN-PC
 */
public class MovieManagement extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public MovieManagement() {
        initComponents();
        loadtheTable();
    }
    
    public void loadtheTable() {
        String filePath = "D:\\DatabaseTextfile\\txtfile.txt";
        File file = new File(filePath);
        
        try {
                FileReader fr = new FileReader(file);
                BufferedReader br = new BufferedReader(fr);
                 
                DefaultTableModel model = (DefaultTableModel)Report.getModel();
                Object[] lines = br.lines().toArray();
            
                for(int i = 0; i < lines.length; i++){
                String[] row = lines[i].toString().split(" , ");
                model.addRow(row);
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MovieManagement.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }
    
    public static void AddRowToJTable(Object [] dataReport)
   {
       DefaultTableModel model = (DefaultTableModel)Report.getModel();
       
       model.addRow(dataReport);
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        label1 = new java.awt.Label();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Report = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 255));

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        label1.setText("MOVIE MANAGEMENT SYSTEM");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie_management/icon movie.png"))); // NOI18N
        jButton1.setText("Export Added Movie");
        jButton1.setFocusPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie_management/icons8-film-reel-50.png"))); // NOI18N
        jButton2.setText("Edit Movie Record");
        jButton2.setFocusPainted(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie_management/icons8-remove-50.png"))); // NOI18N
        jButton3.setText("Delete Movie Record");
        jButton3.setFocusPainted(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        Report.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Movie Title", "Year Release", "Genre", "Director", "Director's Birthdate", "Actor", "Actor's Birtdate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Report.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        Report.setInheritsPopupMenu(true);
        Report.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(Report);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie_management/icons8-plus-key-50.png"))); // NOI18N
        jButton4.setText("Add Movie Record");
        jButton4.setFocusPainted(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103)
                .addComponent(jButton4)
                .addGap(27, 27, 27)
                .addComponent(jButton2)
                .addGap(28, 28, 28)
                .addComponent(jButton3)
                .addGap(26, 26, 26)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        String filePath = "D:\\DatabaseTextfile\\txtfile.txt";
        File file = new File(filePath);
        
        try {
            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);
            
            for(int i = 0; i < Report.getRowCount(); i++){//rows
                for(int j = 0; j < Report.getColumnCount(); j++){//columns
                    bw.write(Report.getValueAt(i, j).toString()+" , ");
                }
                bw.newLine();
            }
            
            bw.close();
            fw.close();
            
        } catch (IOException ex) {
            Logger.getLogger(MovieManagement.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         

        try{
            DefaultTableModel modelUpdate = (DefaultTableModel)Report.getModel();

            int selectedRowIndex = Report.getSelectedRow();

            String title  = modelUpdate.getValueAt(selectedRowIndex, 0).toString();
            String year  = modelUpdate.getValueAt(selectedRowIndex, 0).toString();
            String genre  = modelUpdate.getValueAt(selectedRowIndex, 0).toString();
            String direc  = modelUpdate.getValueAt(selectedRowIndex, 0).toString();
            String actors  = modelUpdate.getValueAt(selectedRowIndex, 0).toString();
            String actBday  = modelUpdate.getValueAt(selectedRowIndex, 0).toString();
            String direcBday  = modelUpdate.getValueAt(selectedRowIndex, 0).toString();

            String newTitle = JOptionPane.showInputDialog(null, "Enter New Title",title);
            String newYear = JOptionPane.showInputDialog(null, "Enter New Release Year",year);
            String newGenre = JOptionPane.showInputDialog(null, "Enter New Genre",genre);
            String newDirec = JOptionPane.showInputDialog(null, "Enter New Director",direc);
            String newActors = JOptionPane.showInputDialog(null, "Enter New Actors",actors);
            String newDBday = JOptionPane.showInputDialog(null, "Enter New Actor Birthdate",actBday);
            String newABday = JOptionPane.showInputDialog(null, "Enter New Director Birthdate",direcBday);

            modelUpdate.setValueAt(newTitle, selectedRowIndex, 0);
            modelUpdate.setValueAt(newYear, selectedRowIndex, 1);
            modelUpdate.setValueAt(newGenre, selectedRowIndex, 2);
            modelUpdate.setValueAt(newDirec, selectedRowIndex, 3);
            modelUpdate.setValueAt(newActors, selectedRowIndex, 4);
            modelUpdate.setValueAt(newDBday, selectedRowIndex, 5);
            modelUpdate.setValueAt(newABday, selectedRowIndex, 6);

        }catch (Exception e){

            JOptionPane.showMessageDialog(this, "Please Select A Row to Edit");
        }

    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:

        DefaultTableModel model = (DefaultTableModel)Report.getModel();

        if(Report.getSelectedRowCount()==1){

            model.removeRow(Report.getSelectedRow());

            JOptionPane.showMessageDialog(this,"Report Deleted Succesfully");
        }else if(Report.getRowCount()== 0){

            JOptionPane.showMessageDialog(this,"Report Empty!");

        }else{
            JOptionPane.showMessageDialog(this,"Please Select a Report to Delete");
        }

    }                                        

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        AddMovieRecord add = new AddMovieRecord();
        add.setVisible(true);
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MovieManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MovieManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MovieManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MovieManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MovieManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private static javax.swing.JTable Report;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane2;
    private java.awt.Label label1;
    // End of variables declaration                   
}

  
